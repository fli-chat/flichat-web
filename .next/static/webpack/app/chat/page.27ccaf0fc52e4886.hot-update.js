"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/chat/page",{

/***/ "(app-pages-browser)/./src/hooks/useStompChat.ts":
/*!***********************************!*\
  !*** ./src/hooks/useStompChat.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useStompChat)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _stomp_stompjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stomp/stompjs */ \"(app-pages-browser)/./node_modules/@stomp/stompjs/esm6/client.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/v4.js\");\n/* harmony import */ var _apis_user_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../apis/user.api */ \"(app-pages-browser)/./src/apis/user.api.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\nfunction useStompChat(roomId, userId) {\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([\n        {\n            id: null,\n            message: '안녕하세요!',\n            profileColorType: 'BLUE',\n            roomId: String(roomId),\n            sender: 'Flichat Bot',\n            timeStamp: new Date().getTime,\n            userId,\n            clientMessageId: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n            optimistic: false\n        }\n    ]);\n    const clientRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const subRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    // 간단한 중복 체크: clientMessageId → id\n    const hasMsg = (m)=>messages.some((x)=>m.clientMessageId && x.clientMessageId === m.clientMessageId || m.id && x.id === m.id);\n    const replaceOptimistic = (incoming)=>{\n        setMessages((prev)=>{\n            const idx = incoming.clientMessageId ? prev.findIndex((p)=>p.clientMessageId === incoming.clientMessageId) : -1;\n            if (idx >= 0) {\n                const next = [\n                    ...prev\n                ];\n                next[idx] = {\n                    ...next[idx],\n                    ...incoming,\n                    optimistic: false\n                };\n                return next;\n            }\n            // 없으면 신규 추가(중복만 피함)\n            if (hasMsg(incoming)) return prev;\n            return [\n                ...prev,\n                {\n                    ...incoming,\n                    optimistic: false\n                }\n            ];\n        });\n    };\n    const { data: userInfoData } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useQuery)({\n        queryKey: [\n            'userInfo'\n        ],\n        queryFn: {\n            \"useStompChat.useQuery\": ()=>_apis_user_api__WEBPACK_IMPORTED_MODULE_1__.UserApi.getUser()\n        }[\"useStompChat.useQuery\"],\n        retry: false,\n        staleTime: Infinity,\n        refetchOnMount: false,\n        refetchOnWindowFocus: false\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useStompChat.useEffect\": ()=>{\n            const client = new _stomp_stompjs__WEBPACK_IMPORTED_MODULE_4__.Client({\n                brokerURL: 'wss://chat.flichat.co.kr/ws-chat',\n                reconnectDelay: 5000,\n                heartbeatIncoming: 10000,\n                heartbeatOutgoing: 10000\n            });\n            client.onConnect = ({\n                \"useStompChat.useEffect\": ()=>{\n                    subRef.current = client.subscribe(\"/topic/chat/room/\".concat(roomId), {\n                        \"useStompChat.useEffect\": (msg)=>{\n                            const payload = JSON.parse(msg.body);\n                            replaceOptimistic(payload);\n                        }\n                    }[\"useStompChat.useEffect\"]);\n                }\n            })[\"useStompChat.useEffect\"];\n            client.activate();\n            clientRef.current = client;\n            return ({\n                \"useStompChat.useEffect\": ()=>{\n                    var _subRef_current;\n                    (_subRef_current = subRef.current) === null || _subRef_current === void 0 ? void 0 : _subRef_current.unsubscribe();\n                    client.deactivate();\n                    clientRef.current = null;\n                }\n            })[\"useStompChat.useEffect\"];\n        }\n    }[\"useStompChat.useEffect\"], [\n        roomId\n    ]);\n    const sendMessage = (content)=>{\n        var _userInfoData_data, _userInfoData_data1;\n        const client = clientRef.current;\n        if (!(client === null || client === void 0 ? void 0 : client.connected)) return;\n        const clientMessageId = (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        var _userInfoData_data_nickName, _userInfoData_data_profileColorType;\n        const optimistic = {\n            clientMessageId,\n            optimistic: true,\n            id: null,\n            userId,\n            sender: (_userInfoData_data_nickName = userInfoData === null || userInfoData === void 0 ? void 0 : (_userInfoData_data = userInfoData.data) === null || _userInfoData_data === void 0 ? void 0 : _userInfoData_data.nickName) !== null && _userInfoData_data_nickName !== void 0 ? _userInfoData_data_nickName : '',\n            profileColorType: (_userInfoData_data_profileColorType = userInfoData === null || userInfoData === void 0 ? void 0 : (_userInfoData_data1 = userInfoData.data) === null || _userInfoData_data1 === void 0 ? void 0 : _userInfoData_data1.profileColorType) !== null && _userInfoData_data_profileColorType !== void 0 ? _userInfoData_data_profileColorType : null,\n            roomId: String(roomId),\n            message: content,\n            timeStamp: new Date().toISOString()\n        };\n        // 낙관적 추가\n        setMessages((prev)=>[\n                ...prev,\n                optimistic\n            ]);\n        // 서버 전송(서버가 같은 clientMessageId를 되돌려주면 위 replaceOptimistic이 교체)\n        client.publish({\n            destination: '/send/chat/message',\n            body: JSON.stringify({\n                roomId: String(roomId),\n                userId,\n                message: content,\n                sender: optimistic.sender,\n                profileColorType: optimistic.profileColorType,\n                clientMessageId\n            })\n        });\n    };\n    // useCallback으로 감싸서 함수 참조 안정화\n    const mergeInitial = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useStompChat.useCallback[mergeInitial]\": (list)=>{\n            setMessages({\n                \"useStompChat.useCallback[mergeInitial]\": (prev)=>{\n                    if (!(list === null || list === void 0 ? void 0 : list.length)) return prev;\n                    const next = [\n                        ...prev\n                    ];\n                    list.forEach({\n                        \"useStompChat.useCallback[mergeInitial]\": (m)=>{\n                            if (!messages.some({\n                                \"useStompChat.useCallback[mergeInitial]\": (x)=>m.clientMessageId && x.clientMessageId === m.clientMessageId || m.id && x.id === m.id\n                            }[\"useStompChat.useCallback[mergeInitial]\"])) {\n                                next.push({\n                                    ...m,\n                                    optimistic: false\n                                });\n                            }\n                        }\n                    }[\"useStompChat.useCallback[mergeInitial]\"]);\n                    return next;\n                }\n            }[\"useStompChat.useCallback[mergeInitial]\"]);\n        }\n    }[\"useStompChat.useCallback[mergeInitial]\"], []); // 빈 의존성 배열\n    return {\n        messages,\n        sendMessage,\n        mergeInitial\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useStompChat.ts\n"));

/***/ })

});